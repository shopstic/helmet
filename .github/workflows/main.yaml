name: Build

on: 
  push:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true

defaults:
  run:
    shell: nix develop -v -c bash {0}

jobs:
  build:
    name: Build
    runs-on: [self-hosted, nix, general, "${{ matrix.arch.runner }}", small]
    timeout-minutes: 10
    strategy:
      matrix:
        arch:
          - nix: x86_64-linux
            runner: amd64-linux
          - nix: aarch64-linux
            runner: arm64-linux
          - nix: aarch64-darwin
            runner: arm64-darwin
    steps:
      - uses: actions/checkout@v3

      - name: Set version
        if: github.event.inputs.version
        run: ./cli.sh set_version "${{ github.event.inputs.version }}"

      - name: Build Dev Env
        run: nix build -L -v --no-link '.#packages.${{ matrix.arch.nix }}.devEnv'

      - name: Check
        run: ./cli.sh code_quality

      - name: Build
        run: nix build -L -v --no-link '.#defaultPackage.${{ matrix.arch.nix }}'

      - name: Cache Dev Env
        env:
          NIX_OUTPUT: .#packages.${{ matrix.arch.nix }}.devEnv
        run: |
          nix store sign "${NIX_OUTPUT}" -v -r -k ~/.secrets/nix-cache-private-key
          nix copy -v "${NIX_OUTPUT}" --to s3://nixed/cache

      - name: Cache helmet
        env:
          NIX_OUTPUT: .#defaultPackage.${{ matrix.arch.nix }}
        run: |
          nix store sign "${NIX_OUTPUT}" -v -r -k ~/.secrets/nix-cache-private-key
          nix copy -v "${NIX_OUTPUT}" --to s3://nixed/cache
      
      - name: Release
        if: github.event.inputs.version
        run: |
          ./cli.sh create_release "${{ github.event.inputs.version }}"

      
